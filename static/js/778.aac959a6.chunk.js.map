{"version":3,"file":"static/js/778.aac959a6.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage.jsx","utils/hooks/useMovieDetails.jsx","utils/api/apiMoviedb.jsx"],"sourcesContent":["import { Outlet, Link, useParams, useLocation } from 'react-router-dom';\nimport { useMovieDetails } from 'utils/hooks/useMovieDetails';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { movieDetails } = useMovieDetails(movieId);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <div>\n      <Link to={backLinkHref}>\n        {' '}\n        <button type=\"button\" style={{ margin: '15px' }}>\n          Go back\n        </button>\n      </Link>\n      <div\n        style={{\n          marginBottom: '30px',\n          borderTop: '1px solid #ccc',\n          borderBottom: '1px solid #ccc',\n          padding: '20px',\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        <img\n          src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movieDetails.poster_path}`}\n          alt=\"{movieDetails.original_title}\"\n          style={{ float: 'left' }}\n        />\n\n        <div style={{ flex: 1, marginLeft: '10px' }}>\n          <h2>\n            {movieDetails.title} (\n            {movieDetails.release_date\n              ? movieDetails.release_date.substring(0, 4)\n              : ''}\n            )\n          </h2>\n\n          <p>\n            User Score:{' '}\n            {movieDetails.vote_average\n              ? Math.fround(movieDetails.vote_average * 10).toFixed(0)\n              : ''}\n            %\n          </p>\n          <h3>Overview</h3>\n          <p>{movieDetails.overview}</p>\n\n          <h4>Genres</h4>\n          <p>\n            {movieDetails.genres\n              ? movieDetails.genres.map(genre => genre.name).join(' ')\n              : ''}\n          </p>\n        </div>\n      </div>\n\n      <div\n        style={{\n          marginBottom: '30px',\n          borderTop: '1px solid #ccc',\n          borderBottom: '1px solid #ccc',\n          padding: '20px',\n        }}\n      >\n        <p>Additional information</p>\n\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import * as API from '../api/apiMoviedb';\nimport { useState, useEffect } from 'react';\n\nexport const useMovieDetails = movieId => {\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  useEffect(() => {\n    API.getMovieDetails(movieId).then(movieDetailsReturnedFromApi =>\n      setMovieDetails(movieDetailsReturnedFromApi)\n    );\n  }, [movieId]);\n\n  return { movieDetails };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=274e7c8f561cfc4aca5d1a492dcf8b13';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["movieId","useState","movieDetails","setMovieDetails","useEffect","API","then","movieDetailsReturnedFromApi","useMovieDetails","useParams","backLinkHref","useLocation","state","from","to","type","style","margin","marginBottom","borderTop","borderBottom","padding","display","alignItems","src","poster_path","alt","float","flex","marginLeft","title","release_date","substring","vote_average","Math","fround","toFixed","overview","genres","map","genre","name","join","axios","API_KEY","getTrending","response","data","results","id","searchMovies","inputValue","getMovieDetails","getMovieCredits","moviesId","cast","character","profile_path","getMoviesReviews","author","content"],"sourceRoot":""}