{"version":3,"file":"static/js/149.c959ea59.chunk.js","mappings":"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","sources":["components/TrendingList/TrendingList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","pages/NotFound.jsx","utils/api/apiMoviedb.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport * as API from '../../utils/api/apiMoviedb';\nimport { useEffect, useState } from 'react';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\nimport NotFound  from '../../pages/NotFound';\n\n\nexport const SearchForm = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [notFound, setNotFound] = useState(false);\n\n  const handleSubmit = e => {\n    setSearchParams({ query: e.target[0].value });\n    e.preventDefault();\n    return;\n  };\n\n  useEffect(() => {\n    const movieTitle = searchParams.get('query');\n    if (movieTitle) {\n      API.searchMovies(movieTitle)\n        .then(ret => {\n          if (ret.length === 0) {\n            setNotFound(true);\n          } else {\n            setMovies(ret);\n            setNotFound(false);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n          setNotFound(true);\n        });\n    }\n  }, [searchParams]);\n\n  if (notFound) {\n    return <NotFound />;\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} style={{ margin: '15px' }}>\n        <input type=\"text\" placeholder=\"Search...\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <TrendingList movies={movies} />\n    </div>\n  );\n};","import { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  return <SearchForm />;\n};\n\nexport default Movies;\n","const NotFound = () => {\n  return (\n    <main style={{ textAlign: 'center' }}>\n      <b style={{ fontSize: 64 }}>404</b>\n      <p>Sorry, we couldn't find that movie.</p>\n    </main>\n  );\n};\n\nexport default NotFound;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=274e7c8f561cfc4aca5d1a492dcf8b13';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["TrendingList","movies","location","useLocation","map","movie","to","id","state","from","title","SearchForm","useState","setMovies","useSearchParams","searchParams","setSearchParams","notFound","setNotFound","useEffect","movieTitle","get","API","then","ret","length","catch","error","console","NotFound","onSubmit","e","query","target","value","preventDefault","style","margin","type","placeholder","textAlign","fontSize","axios","API_KEY","getTrending","response","data","results","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews","author","content"],"sourceRoot":""}